syntax = "proto3";
option go_package = "pkg/api/protos";
import "google/protobuf/empty.proto";

service Spdk {
  rpc SpdkGetVersion (google.protobuf.Empty) returns (SpdkVersion);
  rpc FrameworkGetReactors (google.protobuf.Empty) returns (FrameworkReactors);
  rpc NvmfGetSubsystems (google.protobuf.Empty) returns (NvmfSubsystems);
}

message SpdkVersion {
  string version = 1;
}

message FrameworkReactors {
  uint64 tick_rate = 1;       
  uint32 pid       = 2;            
  repeated FrameworkReactor reactors = 3;    
}

message FrameworkReactor {
  uint32 lcore        = 1;
  uint32 tid          = 2;
  uint64 busy         = 3;
  uint64 idle         = 4;
  bool   in_interrupt = 5;
  uint32 irq          = 6;
  uint64 sys          = 7;
  uint64 usr          = 8;
  repeated FrameworkReactorLwThread lw_threads = 9;
}

message FrameworkReactorLwThread {
  string name    = 1;  
  uint32 id      = 2;  
  string cpumask = 3;  
  uint64 elapsed = 4;  
}


message NvmfSubsystems {
    repeated NvmfSubsystem subsystems = 1;
}

message NvmfSubsystem {
    string nqn                   = 1;
    string subtype               = 2;
    repeated NvmfListenAddress listen_addresses = 3;
    bool   allow_any_host        = 4;
    repeated string hosts        = 5;
    string    serial_number      = 6;
    string    model_number       = 7;
    uint32    max_namespaces     = 8;
    uint32    min_cntlid         = 9;
    uint32    max_cntlid         = 10;
    repeated NvmfNamespace namespaces = 11;
}

message NvmfListenAddress {
    string trtype   = 1;
    string adrfam   = 2;
    string traddr   = 3;
    string trsvcid  = 4;
}

message NvmfNamespace {
    uint32 nsid        = 1;
    string bdev_name   = 2;
    string name        = 3;
    string nguid       = 4;
    string uuid        = 5;
}

